version: '4.17.1'

volumes:
  rabbitmq_data:
  pgdata:
  kongadata:
  # db-data:
  # db:
  #   driver: local

networks:
  dino-net:
    driver: bridge

services:
  # db:
  #   image: mysql:8.0
  #   cap_add:
  #     - SYS_NICE
  #   restart: always
  #   environment:
  #     - MYSQL_DATABASE=user
  #     - MYSQL_ROOT_PASSWORD=password
  #   ports:
  #     - '3307:3306'
  #   volumes:
  #     - db:/var/lib/mysql
  #     - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
  rabbitmq:
    image: rabbitmq:3-management
    # platform: 'linux/x86_64'
    container_name: rabbitmq
    restart: always
    networks:
      - dino-net
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  user:
    build:
      context: ./
      dockerfile: user.Dockerfile
    image: geraldding/user:dino
    restart: always
    networks:
      - dino-net
    container_name: user
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/user
      # DB_HOST: db
      # DB_PORT: 3307
      # DB_USER: root
      # DB_PASSWORD: password
      # DB_NAME: user
      PYTHONUNBUFFERED: 1
    # links:
      # - db
    # volumes:
    #   - ./:/src
    ports:
      - "5003:5003"

  points_accumulation:
    build:
      context: ./
      dockerfile: points_accumulation.Dockerfile
    image: geraldding/points_accumulation:dino
    restart: always
    networks:
      - dino-net
    depends_on:
      - rabbitmq
      - user
      - error
    container_name: points_accumulation
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      user_URL: http://user:5003/user
      PYTHONUNBUFFERED: 1
    ports:
      - "6003:6003"

  buyvoucher:
    build:
      context: ./
      dockerfile: buyvoucher.Dockerfile
    image: geraldding/buyvoucher:dino
    restart: always
    networks:
      - dino-net
    depends_on:
      - rabbitmq
      - user
      - error
      - purchasedvoucher
    container_name: buyvoucher
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      user_URL: http://user:5003/user
      voucher_URL: http://purchasedvoucher:5002/voucher
      PYTHONUNBUFFERED: 1
    ports:
      - "6002:6002"
  
  availablevoucher:
    build:
      context: ./
      dockerfile: availablevoucher.Dockerfile
    image: geraldding/availablevoucher:dino
    restart: always
    networks:
      - dino-net
    container_name: availablevoucher
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/availablevoucher
      # DB_HOST: db
      # DB_PORT: 3307
      # DB_USER: root
      # DB_PASSWORD: password
      # DB_NAME: user
      PYTHONUNBUFFERED: 1
    # links:
      # - db
    # volumes:
    #   - ./:/src
    ports:
      - "5001:5001"
  
  redeemvoucher:
    build:
      context: ./
      dockerfile: redeemvoucher.Dockerfile
    image: geraldding/redeemvoucher:dino
    restart: always
    networks:
      - dino-net
    depends_on:
      - rabbitmq
      - purchasedvoucher
    container_name: redeemvoucher
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      voucher_URL: http://purchasedvoucher:5002/voucher
      PYTHONUNBUFFERED: 1
    ports:
      - "5010:5010"
    
  
  graphqlserver:
    build:
      context: ./
      dockerfile: graphqlserver.Dockerfile
    image: geraldding/graphqlserver:dino
    restart: always
    networks:
      - dino-net
    container_name: graphqlserver
    environment:
      graphqlserver_url: http://graphqlserver:5030/graphql
    ports:
      - "5030:5030"
  
  purchasedvoucher:
    build:
      context: ./
      dockerfile: purchasedvoucher.Dockerfile
    image: geraldding/purchasedvoucher:dino
    restart: always
    networks:
      - dino-net
    container_name: purchasedvoucher
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/purchasedvoucher
      # DB_HOST: db
      # DB_PORT: 3307
      # DB_USER: root
      # DB_PASSWORD: password
      # DB_NAME: user
      PYTHONUNBUFFERED: 1
    # links:
      # - db
    # volumes:
    #   - ./:/src
    ports:
      - "5002:5002"

  error:
    build:
      context: ./
      dockerfile: error.Dockerfile
    image: geraldding/error:dino
    restart: always
    networks:
      - dino-net
    depends_on:
      - rabbitmq
    container_name: error
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

# Changes made
  email_test:
    build:
      context: ./
      dockerfile: email_test.Dockerfile
    image: geraldding/email_test:dino
    restart: always
    networks:
      - dino-net
    depends_on:
      - rabbitmq
    container_name: email_test
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  validatevoucher:
    build:
      context: ./
      dockerfile: validatevoucher.Dockerfile
    image: geraldding/validatevoucher:dino
    restart: always
    networks:
      - dino-net
    depends_on:
      - user
      - availablevoucher
    container_name: validatevoucher
    environment:
      user_URL: http://user:5003/user
      voucher_URL: http://availablevoucher:5001/availablevoucher
      PYTHONUNBUFFERED: 1
    ports:
      - "6001:6001"

  kongnodb:
    build:
      context: ./kong/declarative
      dockerfile: kong.Dockerfile
    image: geraldding/kong:kongnodb
    # platform: 'linux/x86_64'
    restart: always
    networks:
      - dino-net
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: kong.yml
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl, 0.0.0.0:9080 http2, 0.0.0.0:9081 http2 ssl
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://kong:8000" ]
      interval: 5s
      timeout: 10s
      retries: 15
    ports:
      - "8001:8001"
      - "8444:8444"
      - "8000:8000"
      - "8443:8443"
      - "9080:9080"
      - "9081:9081"
